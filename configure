#!/usr/bin/env python
import os
import sys
from scripts.cmd import Command
from scripts.getEnv import *
try:
	from colorama import Fore
except ImportError:
	print 'Configure script requires colorama. Please install it:'
	print 'easy_install colorama'
	print ''
	print 'If you do not have easy_install, please install it.'
	print 'For yum systems:'
	print '\tyum install python-setuptools'
	print 'For apt systems:'
	print '\tapt-get install python-setuptools'
	sys.exit(1)

compile_pam, pam_module_path = getEnv()

ret = 0

if compile_pam == True:
	print Fore.CYAN + 'Compiling PAM module:' + Fore.RESET
	print ''

	print Fore.CYAN + 'Checking for required libraries:' + Fore.RESET
	for library in open('libs'):
		library = library.strip()
		lib = Command('pkg-config --modversion %s' % (library))
		if lib.returncode == 0:
			print Fore.GREEN + 'Library found: %s' % (library) + Fore.RESET
		else:
			print Fore.RED + 'Library NOT found: %s' % (library) + Fore.RESET
			ret = 1

	print ''
	print Fore.CYAN + 'Checking for required commands:' + Fore.RESET
	for command in open('commands'):
		command = command.strip()

		cmd = Command('hash %s' % (command))
		if cmd.returncode == 0:
			print Fore.GREEN + 'Command found: %s' % (command) + Fore.RESET
		else:
			print Fore.RED + 'Command NOT found: %s' % (command) + Fore.RESET
			ret = 2

	if ret != 0:
		print Fore.RED + 'Dependencies not met.'
		print 'Please fix the dependencies or install without the PAM module.' + Fore.RESET
		sys.exit(ret)

	makeCmd = Command('make -f %(dir)smakefile OUT_PATH=%(name)s DIR=%(dir)s' % {'dir' : 'lib/pam/', 'name' : pam_module_path})
	if makeCmd.returncode == 0:
		print Fore.GREEN + 'PAM module successfully compiled' + Fore.RESET
	else:
		print Fore.RED + 'Error compiling PAM module.'
		print makeCmd.stderr + Fore.RESET
		ret = 3
else:
	print 'Not compiling PAM module'

sys.exit(ret)
