#!/usr/bin/env python
import os
import shutil
from colorama import Fore

doGlobal = os.environ.get('npm_config_global') == 'true' or False

configFileName = 'config.json'
scriptPath = '/etc/systemd/system' if doGlobal else './systemd'
fileName = 'filesync'

doPam = False
doPam = (os.environ.get('npm_config_pam_module') or os.environ.get('npm_package_config_pam_module')) == 'true' or False

binroot = os.environ.get('npm_config_binroot') or '/usr/local/bin' if doGlobal else './bin'
etcroot = os.environ.get('npm_config_etcroot') or '/etc/filesync' if doGlobal else './etc'
libroot = os.environ.get('npm_config_libroot') or '/usr/local/lib/filesync' if doGlobal else './lib'

pamModule = os.environ.get('npm_config_pam_module_name') or os.environ.get('npm_package_config_pam_module_name')
if doGlobal:
	pamPath = os.environ.get('npm_config_pam_module_path') or '/lib/security'
else:
	pamPath = os.environ.get('npm_config_pam_module_path') or os.environ.get('npm_package_config_pam_module_path')

port = int(os.environ.get('npm_config_port') or os.environ.get('npm_package_config_port') or 2000)

systemDShell = '''\
[Unit]
Description=Syncs files with a server when they change
Wants=network.target
After=network.target

[Service]
ExecStart=%(bin)s --port %(port)d --config %(etc)s
WorkingDirectory=%(dir)s
Restart=always

[Install]
WantedBy=multi-user.target\
''' % {'bin' : binroot, 'dir' : libroot, 'port' : port, 'etc' : etcroot}

try:
	if os.path.exists(scriptPath) != True:
		os.makedirs(scriptPath, 0755)

	systemdPath = os.path.join(scriptPath, 'filesync.service')
	file = open(systemdPath, 'w')
	file.write(systemDShell)
	file.close()

	shutil.move(pamModule, os.path.join(pamPath, pamModule))
except IOError as (errno, error):
	print Fore.RED + 'IO Error: %(errno)s %(error)s' % {'errno' : errno, 'error' : error} + Fore.RESET
else:
	print Fore.CYAN + 'Systemd service file created: %s' % systemdPath + Fore.RESET

if doPam == True:
	print Fore.CYAN + 'PAM module saved to: %s.' % os.path.join(pamPath, pamModule) + Fore.RESET
	print '''
%(color1)sFor security reasons, the module is not active.
To active the module, edit the PAM config file(s) at /etc/pam.d.

%(color2)sBelow is a template:%(reset)s%(color3)s
	auth sufficient %(module)s url=https://localhost:%(port)d
	account sufficient %(module)s%(reset)s\
''' % {'port' : port, 'module' : pamModule, 'color1' : Fore.YELLOW, 'color2' : Fore.GREEN, 'color3' : Fore.WHITE, 'reset' : Fore.RESET}
